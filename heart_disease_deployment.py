# -*- coding: utf-8 -*-
"""Heart-Disease-Deployment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NAOdfKXdVYH4ap8wcNPENkky4DAXQK80
"""

!pip install streamlit
!pip install joblib

import streamlit as st
import numpy as np
import joblib

# Load saved model
model = joblib.load('/content/heart_disease_model.pkl')

# Title
st.title('üíì Heart Disease Prediction App')

# User Inputs
st.header("Enter Patient Details")

age = st.slider("Age", 20, 90, 50)
sex = st.selectbox("Sex", [0, 1])  # 0: Female, 1: Male
cp = st.selectbox("Chest Pain Type", [0, 1, 2, 3])
trestbps = st.slider("Resting Blood Pressure", 80, 200, 120)
chol = st.slider("Cholesterol (mg/dl)", 100, 400, 200)
fbs = st.selectbox("Fasting Blood Sugar > 120 mg/dl", [0, 1])
restecg = st.selectbox("Resting ECG Results", [0, 1, 2])
thalach = st.slider("Max Heart Rate Achieved", 60, 220, 150)
exang = st.selectbox("Exercise Induced Angina", [0, 1])
oldpeak = st.slider("Oldpeak (ST depression)", 0.0, 6.0, 1.0, step=0.1)
slope = st.selectbox("Slope of the peak exercise ST", [0, 1, 2])
ca = st.selectbox("Number of major vessels (0‚Äì3)", [0, 1, 2, 3])
thal = st.selectbox("Thalassemia", [0, 1, 2, 3])  # Depends on your mapping

# Predict
if st.button("Predict"):
    input_data = np.array([[age, sex, cp, trestbps, chol, fbs, restecg,
                            thalach, exang, oldpeak, slope, ca, thal]])
    prediction = model.predict(input_data)[0]
    proba = model.predict_proba(input_data)[0][1]

    if prediction == 1:
        st.error(f"‚ö†Ô∏è High risk of heart disease. Probability: {proba:.2f}")
    else:
        st.success(f"‚úÖ Low risk of heart disease. Probability: {proba:.2f}")